AWSTemplateFormatVersion: 2010-09-09

Description: >
  CloudFormation Template for To-Do Web API. This template creates
  Python Flask Web API on Amazon Linux 2 (ami-026dea5602e368e96) EC2 Instance with
  custom security group allowing http connections on port 80.
  To-Do Web API Application is downloaded from Github repository, then installed on Flask.

Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Flask Web API
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  WebServerHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d95fab7fff3776c
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:                
        -                        
          Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack   
      UserData:
        Fn::Base64: 
          !Sub
            - |
              #! /bin/bash
              yum update -y
              yum install python3 -y
              pip3 install flask
              pip3 install flask_mysql
              echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
              curl -s --create-dirs -o "/home/ec2-user/app.py" -L https://raw.githubusercontent.com/TylerCounter/aws/master/projects/003-to-do-web-api-ec2-rds/to-do-api.py
              python3 /home/ec2-user/app.py
            - MyDBURI: !GetAtt MyDatabaseServer.Endpoint.Address
  MyDBSecurityGroup:
    Type: "AWS::RDS::DBSecurityGroup"
    Properties:
      GroupDescription: Frontend Access
      DBSecurityGroupIngress:
        - EC2SecurityGroupId: !GetAtt WebServerSecurityGroup.GroupId
  MyDatabaseServer:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t2.micro #required
      DBInstanceIdentifier: to-do-api-db-server
      DBName: todo_db
      Engine: MySQL
      EngineVersion: 8.0.19
      MasterUserPassword: TylerCounter
      MasterUsername: admin
      MonitoringInterval: 0
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: true
      DBSecurityGroups:
        - Ref: MyDBSecurityGroup
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerHost.PublicDnsName
    Description: To-Do Web API URL
